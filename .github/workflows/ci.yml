name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-2022]
        node-version: [20.x]
        # Adds a platform value to the matrix, used later on to run the appropriate
        # package command.
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: mac
          - os: windows-2022
            platform: win

    steps:
      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout submodules
        shell: bash
        run: |
          git submodule update --init --recursive backend/vcpkg
          git submodule update --init --recursive backend/extern/afv-native
          git submodule update --init --recursive backend/extern/libuiohook
          cd backend/extern/afv-native
          git checkout develop-trackaudio
          cd ../libuiohook
          git checkout unregister-hook-when-debugging

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: "3.11.x"

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.30.x'

      - name: Use cmake
        run: cmake --version

      - name: Setup environment
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install utf8proc

      - name: Install SFML native dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libx11-dev libxrandr-dev libxcursor-dev libxi-dev libudev-dev libgl1-mesa-dev pkg-config libxtst-dev libxinerama-dev libx11-xcb-dev libxkbcommon-dev libxkbcommon-x11-dev libxkbfile-dev libutf8proc-dev libxt-dev

      - name: Install dependencies
        run: |
          npm -g i cmake-js
          npm run build:backend
          npm install

      - name: Run eslint
        run: npm run lint

      - name: Build and package
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run build:${{ matrix.platform }} -- --publish=never

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: TrackAudio-${{ matrix.platform }}
          path: dist/trackaudio-*.*
